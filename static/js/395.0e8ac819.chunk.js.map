{"version":3,"file":"static/js/395.0e8ac819.chunk.js","mappings":"+SACAA,EAAAA,EAAAA,SAAAA,QAAuB,gCACvB,IAAMC,EAAI,mCACH,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGAEoBF,EAAAA,EAAAA,IAAA,qCAAwCC,IAF5D,cAEGE,EAFH,yBAIIA,EAASC,MAJb,kEAMI,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,uFACmBN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAA+CK,IADlE,cACGH,EADH,yBAEIA,EAASC,MAFb,kEAIA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACmBR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,IADpD,cACGE,EADH,yBAEIA,EAASC,MAFb,kEAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACmBR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,IAD5D,cACGE,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,uFACmBR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAAyCP,IAD5D,cACGE,EADH,yBAEIA,EAASC,MAFb,kE,yGCkBX,UApCc,WACd,OAAyBO,EAAAA,EAAAA,YAAzB,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaJ,OAXJE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,8GAEOP,EAAAA,EAAAA,IAAeI,GAFtB,OAERI,EAFQ,OAGdL,EAAUK,EAAOC,SAHH,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,CAACH,IACCF,GAA4B,IAAlBA,EAAOU,QAGlB,iCACA,mBACE,wBACGV,EAAOW,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBACE,uBAAID,OAGN,uBAAIC,MALGjB,EADC,UALb,oEAmBV,C","sources":["appi/appi.js","pages/REVIEWS/REVIEWS.js"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL='https://api.themoviedb.org/3/'\nconst key='b934e9743eee394e4eeac4052d9d4c4f'\nexport async function getTrending (){\n\n    const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  \n    return response.data}\n    \n    export async function getMovie(query){\n        const response =await axios.get(`search/movie?api_key=${key}&query=${query}`)\n        return response.data\n    }\n    export async function getMovieDetails(id){\n        const response =await axios.get(`movie/${id}?api_key=${key}`)\n        return response.data\n    }\n    export async function getMovieCredits(id){\n        const response =await axios.get(`movie/${id}/credits?api_key=${key}`)\n        return response.data\n        \n    }\n    export async function getMovieRewiew(id){\n        const response =await axios.get(`movie/${id}/reviews?api_key=${key}`)\n        return response.data\n    }","import { getMovieRewiew } from 'appi/appi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\n const Review=()=>{\nconst [review,setReview]=useState()\nconst { movieId } = useParams();\n\nuseEffect(()=>{\n    const fetchReview = async () => {\n        try {\n          const result = await getMovieRewiew(movieId);\n          setReview(result.results);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      fetchReview();\n    }, [movieId]);\n    if (!review || review.length === 0)\n    return <p>We don't have any reviews for this movie.</p>;\n    return(\n        <>\n        <hr />\n          <ul>\n            {review.map(({ id, author, content}) => (\n              <li key={id}>\n                <p>\n                  <b>{author}</b>\n                </p>\n  \n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n    \n      </>\n    )\n\n}\nexport default Review"],"names":["axios","key","getTrending","response","data","getMovie","query","getMovieDetails","id","getMovieCredits","getMovieRewiew","useState","review","setReview","movieId","useParams","useEffect","fetchReview","result","results","console","log","length","map","author","content"],"sourceRoot":""}
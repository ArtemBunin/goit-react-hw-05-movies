{"version":3,"file":"static/js/804.cddee8be.chunk.js","mappings":"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","sources":["appi/appi.js","pages/MovieDetails/MovieDetails.js","pages/MovieDetails/MovieDetails.styled.js"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL='https://api.themoviedb.org/3/'\nconst key='b934e9743eee394e4eeac4052d9d4c4f'\nexport async function getTrending (){\n\n    const response = await axios.get(`trending/movie/day?api_key=${key}`);\n  \n    return response.data}\n    \n    export async function getMovie(query){\n        const response =await axios.get(`search/movie?api_key=${key}&query=${query}`)\n        return response.data\n    }\n    export async function getMovieDetails(id){\n        const response =await axios.get(`movie/${id}?api_key=${key}`)\n        return response.data\n    }\n    export async function getMovieCredits(id){\n        const response =await axios.get(`movie/${id}/credits?api_key=${key}`)\n        return response.data\n        \n    }\n    export async function getMovieRewiew(id){\n        const response =await axios.get(`movie/${id}/reviews?api_key=${key}`)\n        return response.data\n    }","import { getMovieDetails } from 'appi/appi';\nimport { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, NavLink, Outlet } from 'react-router-dom';\nimport { IMage, Box, Title, Text } from './MovieDetails.styled';\n const MovieDetails = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState('null');\n  const location = useLocation();\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const result = await getMovieDetails(movieId);\n        setDetails(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n  if (!details) {\n    return null;\n  }\n\n  const { poster_path, title, genres, vote_average, overview, release_date } =\n    details;\n  if (!genres) {\n    return;\n  }\n  const getGendres = genres => {\n    return genres.map(genr => genr.name).join(',');\n  };\n\n  const date = new Date(release_date);\n\n  return (\n    <main>\n      <div style={{ marginLeft: '25px' }}>\n        <NavLink to={location.state?.from ?? '/'}>Go back</NavLink>\n      </div>\n      <Box>\n        <IMage\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <div>\n          <Title>\n            {title}({date.getFullYear()})\n          </Title>\n          <Text>User Score: {(vote_average * 10).toFixed()}%</Text>\n          <Title>Overview</Title>\n          <Text>{overview}</Text>\n          <Title>Genres</Title>\n          <Text>{getGendres(genres)}</Text>\n        </div>\n      </Box>\n      <Text>Additional information</Text>\n      <ul>\n        <li>\n          <NavLink to=\"cast\" state={{ from: location.state?.from ?? '/' }}>\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"review\" state={{ from: location.state?.from ?? '/' }}>\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\nexport default MovieDetails\n","import styled from \"styled-components\";\n\n export const IMage= styled.img`\n width: 250px;\n  margin-right: 20px;\n`\nexport const Title= styled.h2`\n \n  margin-right: 20px;\n`\nexport const Box = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  margin: 10px 0;\n  padding-bottom: 10px;\n  border-bottom: 1px solid grey;\n`;\nexport const Text = styled.p`\n  font-size: 16px;\n  margin: 15px 0;\n`;"],"names":["axios","key","getTrending","response","data","getMovie","query","getMovieDetails","id","getMovieCredits","getMovieRewiew","movieId","useParams","useState","details","setDetails","location","useLocation","useEffect","fetchDetails","result","console","log","poster_path","title","genres","vote_average","overview","release_date","date","Date","style","marginLeft","to","state","from","src","alt","getFullYear","toFixed","map","genr","name","join","getGendres","Suspense","fallback","IMage","styled","Title","Box","Text"],"sourceRoot":""}